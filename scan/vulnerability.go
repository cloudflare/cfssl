package scan

import (
	"fmt"
	"log"
	"net/url"

	"github.com/FiloSottile/Heartbleed/heartbleed"
)

// Vulnerability contains scanners to detect vulnerabilities such as Heartbleed
var Vulnerability = &Family{
	Description: "Scans a host to detect TLS vulnerabilities.",
	Scanners: map[string]*Scanner{
		"Heartbleed": {
			"Scan for Heartbleed vulnerability",
			heartbleedScan,
		},
	},
}

func heartbleedScan(addr, hostname string) (grade Grade, output Output, err error) {
	tgt := &heartbleed.Target{
		Service: "https",
		HostIp:  hostname,
	}

	u, err := url.Parse(tgt.HostIp)
	if err == nil && u.Host != "" {
		tgt.HostIp = u.Host
		if u.Scheme != "" {
			tgt.Service = u.Scheme
		}
	}

	out, err := heartbleed.Heartbleed(tgt,
		[]byte("github.com/FiloSottile/Heartbleed"), true)
	if err == heartbleed.Safe {
		str := fmt.Sprintf("%v - SAFE", tgt.HostIp)
		grade, output = Good, str
		err = nil
	} else if err != nil {
		if err.Error() == "Please try again" {
			str := fmt.Sprintf("%v - TRYAGAIN: %v", tgt.HostIp, err)
			grade, output = Warning, str
		} else {
			str := fmt.Sprintf("%v - ERROR: %v", tgt.HostIp, err)
			grade, output = Warning, str
		}
	} else {
		log.Printf("%v\n", out)
		str := fmt.Sprintf("%v - VULNERABLE", tgt.HostIp)
		grade, output = Bad, str
	}
	return
}
